{
  "version": "3.4",
  "log": [
    {
      "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/erc721c/ERC721C.sol:ERC721C": {
        "src": "@limitbreak/creator-token-standards/src/erc721c/ERC721C.sol:17",
        "inherit": [
          "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:AutomaticValidatorTransferApproval",
          "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-standards/src/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-standards/src/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelin",
          "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "getTransferValidationFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_contractName",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:11"
            },
            {
              "label": "_contractSymbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:14"
            },
            {
              "label": "isValidatorInitialized",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:47"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "8",
              "type": "t_address",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:49"
            },
            {
              "label": "autoApproveTransfersFromValidator",
              "offset": 21,
              "slot": "8",
              "type": "t_bool",
              "contract": "AutomaticValidatorTransferApproval",
              "src": "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/erc721c/ERC721C.sol:ERC721CInitializable": {
        "src": "@limitbreak/creator-token-standards/src/erc721c/ERC721C.sol:93",
        "inherit": [
          "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:AutomaticValidatorTransferApproval",
          "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-standards/src/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-standards/src/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinInitializable",
          "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC721(string,string)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "getTransferValidationFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_contractName",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:11"
            },
            {
              "label": "_contractSymbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:14"
            },
            {
              "label": "_erc721Initialized",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "ERC721OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:41"
            },
            {
              "label": "isValidatorInitialized",
              "offset": 1,
              "slot": "8",
              "type": "t_bool",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:47"
            },
            {
              "label": "transferValidator",
              "offset": 2,
              "slot": "8",
              "type": "t_address",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:49"
            },
            {
              "label": "autoApproveTransfersFromValidator",
              "offset": 22,
              "slot": "8",
              "type": "t_bool",
              "contract": "AutomaticValidatorTransferApproval",
              "src": "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-standards/src/interfaces/ICreatorToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "setTransferValidator(address)",
          "getTransferValidationFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/interfaces/ICreatorTokenLegacy.sol:ICreatorTokenLegacy": {
        "src": "@limitbreak/creator-token-standards/src/interfaces/ICreatorTokenLegacy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-standards/src/interfaces/ITransferValidator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)",
          "validateTransfer(address,address,address)",
          "validateTransfer(address,address,address,uint256)",
          "validateTransfer(address,address,address,uint256,uint256)",
          "beforeAuthorizedTransfer(address,address,uint256)",
          "afterAuthorizedTransfer(address,uint256)",
          "beforeAuthorizedTransfer(address,address)",
          "afterAuthorizedTransfer(address)",
          "beforeAuthorizedTransfer(address,uint256)",
          "beforeAuthorizedTransferWithAmount(address,uint256,uint256)",
          "afterAuthorizedTransferWithAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/interfaces/ITransferValidatorSetTokenType.sol:ITransferValidatorSetTokenType": {
        "src": "@limitbreak/creator-token-standards/src/interfaces/ITransferValidatorSetTokenType.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTokenTypeOfCollection(address,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelin": {
        "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:30",
        "inherit": [
          "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721OpenZeppelin",
            "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_contractName",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:11"
            },
            {
              "label": "_contractSymbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_contractName",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:11"
            },
            {
              "label": "_contractSymbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:36",
        "inherit": [
          "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:ERC721OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC721(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_contractName",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:11"
            },
            {
              "label": "_contractSymbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC721OpenZeppelinBase",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:14"
            },
            {
              "label": "_erc721Initialized",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "ERC721OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-standards/src/token/erc721/ERC721OpenZeppelin.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:AutomaticValidatorTransferApproval": {
        "src": "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:12",
        "inherit": [
          "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setAutomaticApprovalOfTransfersFromValidator(bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "autoApproveTransfersFromValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "AutomaticValidatorTransferApproval",
              "src": "@limitbreak/creator-token-standards/src/utils/AutomaticValidatorTransferApproval.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:37",
        "inherit": [
          "@limitbreak/creator-token-standards/src/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-standards/src/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-standards/src/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setTransferValidator(address)",
          "getTransferValidator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreatorTokenBase",
            "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "isValidatorInitialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:47"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-standards/src/utils/CreatorTokenBase.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@limitbreak/creator-token-standards/src/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-standards/src/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:51",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol:IERC4906Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:21",
        "version": {
          "withMetadata": "c4a29b57921f9f55510b448710e3a15201671c4cdf5fce59b9d717e61df86f7e",
          "withoutMetadata": "f61757233e17f215568cf299c758232d5ae03bf90f655ed16c9c7be7d3c0cb99",
          "linkedWithoutMetadata": "f61757233e17f215568cf299c758232d5ae03bf90f655ed16c9c7be7d3c0cb99"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "0cb8150468562053fed3c0877d1f0ed587861f5c11bd0f95f478aced3a92ff36",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "2b66b9ede77920d9c6ce9d3fd47f062860ce21f4bbb2dc49848b6b9d43c1fb85",
          "withoutMetadata": "f1e91fd97d1e880a0bcf6e8942fe8e0ad8890353f6ba36456b53a19a1e2e4871",
          "linkedWithoutMetadata": "f1e91fd97d1e880a0bcf6e8942fe8e0ad8890353f6ba36456b53a19a1e2e4871"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol:IERC4906Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "40c213586cb5f60302faee151cba18965443fc521e5d0a0a0d3a848aaee9dbda",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/Base64Upgradeable.sol:Base64Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/Base64Upgradeable.sol:11",
        "version": {
          "withMetadata": "b0556bc35816569d092235e4d0d86539988ca8f491fc6c45ba90a6358af2819c",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:34",
        "version": {
          "withMetadata": "5e80b03a8a91b464d3910e23ccafbbd8bd89232c98c79dc8ffd9d19b37b0066e",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "e37f50d8f49fc62015d518106c06422766937b5092a5b5ec86a0aaf3e9d59d41",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "934925e9ddbf52123c38f71b8430d5ec5c5b75a8b638c38823a42adb74e5ee1d",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "e4b8103dd15803866a58ac4df4155dac5be5e99be45b3f85a60c4c12eed15274",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9f19e02b152c6e072e767fce9d485cfc8a4f9d32f16d42a3c351f968aa83590e",
          "withoutMetadata": "434356a41b9b9ccf21ec81d99d92bb8093c93d4b3da7db27a66546f2cef0d05e",
          "linkedWithoutMetadata": "434356a41b9b9ccf21ec81d99d92bb8093c93d4b3da7db27a66546f2cef0d05e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "26e3b86dff13151ea99c68330fc216cbc4ea9f4541d34db3df716e62528016cc",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "1d78d78a9134decb5645eadeb95db53e7a18c053abc21fc0acef3fc02e350b0a",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "29a0ee3c90bf3a15492a985d1d493e61dd7c12d59ff5c4a525ac325690198984",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "f25fb45b57c2ea34f0ada7262ead1c9c2e56a610a8f6aa02413ccce565b0bc98",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/DeedNFT.sol:DeedNFT": {
        "src": "src/core/DeedNFT.sol:30",
        "version": {
          "withMetadata": "9a55fe0970b9576bd447bd08e0272c45f8ba2ded9ac105cdca8ea64194fef920",
          "withoutMetadata": "bf422de5c947568804dcc330aaa341a0ba3d4ce74033c7707dceeba8e35bee23",
          "linkedWithoutMetadata": "bf422de5c947568804dcc330aaa341a0ba3d4ce74033c7707dceeba8e35bee23"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol:IERC4906Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(address,address)",
          "pause()",
          "unpause()",
          "setDefaultValidator(address)",
          "setValidatorRegistry(address)",
          "setMetadataRenderer(address)",
          "addMinter(address)",
          "removeMinter(address)",
          "mintAsset(address,uint8,string,string,string,address)",
          "burnAsset(uint256)",
          "burnBatchAssets(uint256[])",
          "validateDeed(uint256,bool,address)",
          "updateMetadata(uint256,string,string,string,string)",
          "getTraitValue(uint256,bytes32)",
          "getTraitValues(uint256,bytes32[])",
          "getTraitKeys(uint256)",
          "getTraitName(bytes32)",
          "getTraitMetadataURI()",
          "contractURI()",
          "setContractURI(string)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "getValidationStatus(uint256)",
          "royaltyInfo(uint256,uint256)",
          "setToDefaultSecurityPolicy()",
          "setApprovedMarketplace(address,bool)",
          "isApprovedMarketplace(address)",
          "setRoyaltyEnforcement(bool)",
          "isRoyaltyEnforced()",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getTransferValidator()",
          "setTransferValidator(address)",
          "getTransferValidationFunction()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC721URIStorageUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "251",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "252",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "301",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "351",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "nexttokenId",
              "offset": 0,
              "slot": "401",
              "type": "t_uint256",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:55"
            },
            {
              "label": "defaultValidator",
              "offset": 0,
              "slot": "402",
              "type": "t_address",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:56"
            },
            {
              "label": "validatorRegistry",
              "offset": 0,
              "slot": "403",
              "type": "t_address",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:57"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "404",
              "type": "t_string_storage",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:58"
            },
            {
              "label": "metadataRenderer",
              "offset": 0,
              "slot": "405",
              "type": "t_address",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:59"
            },
            {
              "label": "_approvedMarketplaces",
              "offset": 0,
              "slot": "406",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:63"
            },
            {
              "label": "_enforceRoyalties",
              "offset": 0,
              "slot": "407",
              "type": "t_bool",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:64"
            },
            {
              "label": "_transferValidator",
              "offset": 1,
              "slot": "407",
              "type": "t_address",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:65"
            },
            {
              "label": "_tokenTraits",
              "offset": 0,
              "slot": "408",
              "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:72"
            },
            {
              "label": "_traitNames",
              "offset": 0,
              "slot": "409",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:78"
            },
            {
              "label": "_allTraitKeys",
              "offset": 0,
              "slot": "410",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:84"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "411",
              "type": "t_array(t_uint256)45_storage",
              "contract": "DeedNFT",
              "src": "src/core/DeedNFT.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint256 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/FundManager.sol:FundManager": {
        "src": "src/core/FundManager.sol:27",
        "version": {
          "withMetadata": "766a486608d85fcb21a1f6123bc1577745966b013b26009d58fb36db74c3d42d",
          "withoutMetadata": "997c46d7a556c85224b9bd3e91161e966d23d4361ba9b6af8ca5a588aeea7261",
          "linkedWithoutMetadata": "997c46d7a556c85224b9bd3e91161e966d23d4361ba9b6af8ca5a588aeea7261"
        },
        "inherit": [
          "src/core/interfaces/IFundManager.sol:IFundManager",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "initialize(address,address,uint256,address)",
          "setCommissionPercentage(uint256)",
          "setFeeReceiver(address)",
          "setValidatorRegistry(address)",
          "setDeedNFT(address)",
          "mintDeedNFT(address,uint8,string,string,string,address,address)",
          "mintBatchDeedNFT(struct IFundManager.DeedMintData[])",
          "withdrawValidatorFees(address,address)",
          "getCommissionBalance(address,address)",
          "getCommissionPercentage()",
          "commissionPercentage()",
          "deedNFT()",
          "formatFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "deedNFTContract",
              "offset": 0,
              "slot": "301",
              "type": "t_address",
              "contract": "FundManager",
              "src": "src/core/FundManager.sol:44"
            },
            {
              "label": "validatorRegistry",
              "offset": 0,
              "slot": "302",
              "type": "t_address",
              "contract": "FundManager",
              "src": "src/core/FundManager.sol:45"
            },
            {
              "label": "_commissionPercentage",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "FundManager",
              "src": "src/core/FundManager.sol:46"
            },
            {
              "label": "feeReceiver",
              "offset": 0,
              "slot": "304",
              "type": "t_address",
              "contract": "FundManager",
              "src": "src/core/FundManager.sol:47"
            },
            {
              "label": "validatorBalances",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "FundManager",
              "src": "src/core/FundManager.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/MetadataRenderer.sol:MetadataRenderer": {
        "src": "src/core/MetadataRenderer.sol:24",
        "version": {
          "withMetadata": "002be6d41f447fc8057055346bbcab0965fd2ab54d3eb040fa59fdb11d68f72c",
          "withoutMetadata": "7ccb8efa9410291e52201e5702d48f7db23e468c928f4ede891d628c7a9e97d7",
          "linkedWithoutMetadata": "7ccb8efa9410291e52201e5702d48f7db23e468c928f4ede891d628c7a9e97d7"
        },
        "inherit": [
          "src/core/interfaces/IERC7572.sol:IERC7572",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/Base64Upgradeable.sol:Base64Upgradeable",
          "src/libraries/StringUtils.sol:StringUtils",
          "src/libraries/JSONUtils.sol:JSONUtils"
        ],
        "methods": [
          "initialize(string)",
          "setBaseURI(string)",
          "setAssetTypeImageURI(uint8,string)",
          "setInvalidatedImageURI(string)",
          "setTokenCustomMetadata(uint256,string)",
          "setTokenGallery(uint256,string[])",
          "getTokenGallery(uint256)",
          "updateAssetDetails(uint256,uint8,string)",
          "tokenURI(address,uint256)",
          "setTokenFeatures(uint256,string[])",
          "getTokenFeatures(uint256)",
          "manageTokenDocument(uint256,string,string,bool)",
          "getTokenDocument(uint256,string)",
          "getTokenDocumentTypes(uint256)",
          "setDeedNFT(address)",
          "manageCompatibleDeedContract(address,bool)",
          "getCompatibleDeedContracts()",
          "isCompatibleDeedContract(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "301",
              "type": "t_string_storage",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:32"
            },
            {
              "label": "assetTypeImageURIs",
              "offset": 0,
              "slot": "302",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:35"
            },
            {
              "label": "invalidatedImageURI",
              "offset": 0,
              "slot": "303",
              "type": "t_string_storage",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:38"
            },
            {
              "label": "tokenDetails",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_struct(AssetDetails)13484_storage)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:53"
            },
            {
              "label": "tokenGalleryImages",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:56"
            },
            {
              "label": "tokenFeatures",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:59"
            },
            {
              "label": "tokenDocumentTypes",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:62"
            },
            {
              "label": "tokenDocuments",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:63"
            },
            {
              "label": "tokenCustomMetadata",
              "offset": 0,
              "slot": "309",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:66"
            },
            {
              "label": "deedNFT",
              "offset": 0,
              "slot": "310",
              "type": "t_contract(IDeedNFT)18423",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:79"
            },
            {
              "label": "compatibleDeedContracts",
              "offset": 0,
              "slot": "311",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:85"
            },
            {
              "label": "deedContractsList",
              "offset": 0,
              "slot": "312",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MetadataRenderer",
              "src": "src/core/MetadataRenderer.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDeedNFT)18423": {
              "label": "contract IDeedNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(uint256 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(AssetDetails)13484_storage)": {
              "label": "mapping(uint256 => struct MetadataRenderer.AssetDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AssetDetails)13484_storage": {
              "label": "struct MetadataRenderer.AssetDetails",
              "members": [
                {
                  "label": "confidenceScore",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "background_color",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "animation_url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fields",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "boolFields",
                  "type": "t_mapping(t_string_memory_ptr,t_bool)",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/Validator.sol:Validator": {
        "src": "src/core/Validator.sol:38",
        "version": {
          "withMetadata": "6e0cc364fa9740debc4219101e04980cba703fc63a44c632b15e98e1ea53c481",
          "withoutMetadata": "6cb7f2418c8b4e0178081cb6e2e9b06fbccd2ccc56ee564e5f54de0c0aee3f6e",
          "linkedWithoutMetadata": "6cb7f2418c8b4e0178081cb6e2e9b06fbccd2ccc56ee564e5f54de0c0aee3f6e"
        },
        "inherit": [
          "src/core/interfaces/IValidator.sol:IValidator",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "src/libraries/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(string,string)",
          "setBaseUri(string)",
          "getBaseUri()",
          "setDefaultOperatingAgreement(string)",
          "defaultOperatingAgreement()",
          "setOperatingAgreementName(string,string)",
          "removeOperatingAgreementName(string)",
          "setDeedNFT(address)",
          "addCompatibleDeedNFT(address)",
          "removeCompatibleDeedNFT(address)",
          "setPrimaryDeedNFT(address)",
          "setAssetTypeSupport(uint256,bool)",
          "setValidationCriteria(uint256,string)",
          "setDeedMetadata(uint256,string)",
          "validateDeed(uint256)",
          "setupFieldRequirements(uint256)",
          "setupAllFieldRequirements()",
          "operatingAgreementName(string)",
          "supportsAssetType(uint256)",
          "tokenURI(uint256)",
          "addWhitelistedToken(address)",
          "removeWhitelistedToken(address)",
          "setServiceFee(address,uint256)",
          "setFundManager(address)",
          "withdrawServiceFees(address)",
          "isTokenWhitelisted(address)",
          "getServiceFee(address)",
          "getValidationCriteria(uint256)",
          "isCompatibleDeedNFT(address)",
          "registerOperatingAgreement(string,string)",
          "validateOperatingAgreement(string)",
          "getRoyaltyFeePercentage(uint256)",
          "setRoyaltyFeePercentage(uint96)",
          "getRoyaltyReceiver()",
          "setRoyaltyReceiver(address)",
          "supportsInterface(bytes4)",
          "clearFieldRequirements(uint256)",
          "addFieldRequirementsBatch(uint256,string[],string[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "301",
              "type": "t_string_storage",
              "contract": "Validator",
              "src": "src/core/Validator.sol:73"
            },
            {
              "label": "defaultOperatingAgreementUri",
              "offset": 0,
              "slot": "302",
              "type": "t_string_storage",
              "contract": "Validator",
              "src": "src/core/Validator.sol:76"
            },
            {
              "label": "deedNFT",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(IDeedNFT)18423",
              "contract": "Validator",
              "src": "src/core/Validator.sol:80"
            },
            {
              "label": "supportedAssetTypes",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:84"
            },
            {
              "label": "operatingAgreements",
              "offset": 0,
              "slot": "305",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:88"
            },
            {
              "label": "deedMetadata",
              "offset": 0,
              "slot": "306",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:92"
            },
            {
              "label": "validationCriteria",
              "offset": 0,
              "slot": "307",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:97"
            },
            {
              "label": "compatibleDeedNFTs",
              "offset": 0,
              "slot": "308",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:100"
            },
            {
              "label": "primaryDeedNFT",
              "offset": 0,
              "slot": "309",
              "type": "t_address",
              "contract": "Validator",
              "src": "src/core/Validator.sol:103"
            },
            {
              "label": "isWhitelisted",
              "offset": 0,
              "slot": "310",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:107"
            },
            {
              "label": "serviceFee",
              "offset": 0,
              "slot": "311",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:111"
            },
            {
              "label": "serviceFeesBalance",
              "offset": 0,
              "slot": "312",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Validator",
              "src": "src/core/Validator.sol:114"
            },
            {
              "label": "fundManager",
              "offset": 0,
              "slot": "313",
              "type": "t_address",
              "contract": "Validator",
              "src": "src/core/Validator.sol:117"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "314",
              "type": "t_array(t_uint256)48_storage",
              "contract": "Validator",
              "src": "src/core/Validator.sol:122"
            },
            {
              "label": "royaltyFeePercentage",
              "offset": 0,
              "slot": "362",
              "type": "t_uint96",
              "contract": "Validator",
              "src": "src/core/Validator.sol:127"
            },
            {
              "label": "royaltyReceiver",
              "offset": 12,
              "slot": "362",
              "type": "t_address",
              "contract": "Validator",
              "src": "src/core/Validator.sol:130"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDeedNFT)18423": {
              "label": "contract IDeedNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/ValidatorRegistry.sol:ValidatorRegistry": {
        "src": "src/core/ValidatorRegistry.sol:29",
        "version": {
          "withMetadata": "064d2dc52b5a8f87d3b7304e9422a9372a2dd55bc06d7d38faf9843d480b8556",
          "withoutMetadata": "99f9f405e5ce2d5e7a090d18233a1515a11633dcacc95c7583a65391c4696446",
          "linkedWithoutMetadata": "99f9f405e5ce2d5e7a090d18233a1515a11633dcacc95c7583a65391c4696446"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize()",
          "registerValidator(address,string)",
          "removeValidator(address)",
          "updateValidatorName(address,string)",
          "getValidatorName(address)",
          "isValidatorRegistered(address)",
          "updateValidatorAssetTypes(address,uint256[])",
          "updateValidatorStatus(address,bool)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "201",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "validators",
              "offset": 0,
              "slot": "301",
              "type": "t_mapping(t_address,t_struct(ValidatorInfo)17745_storage)",
              "contract": "ValidatorRegistry",
              "src": "src/core/ValidatorRegistry.sol:63"
            },
            {
              "label": "assetTypeValidators",
              "offset": 0,
              "slot": "302",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "ValidatorRegistry",
              "src": "src/core/ValidatorRegistry.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "303",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ValidatorRegistry",
              "src": "src/core/ValidatorRegistry.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(ValidatorInfo)17745_storage)": {
              "label": "mapping(address => struct ValidatorRegistry.ValidatorInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ValidatorInfo)17745_storage": {
              "label": "struct ValidatorRegistry.ValidatorInfo",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "supportedAssetTypes",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/interfaces/IDeedNFT.sol:IDeedNFT": {
        "src": "src/core/interfaces/IDeedNFT.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)",
          "_exists(uint256)",
          "canSubdivide(uint256)",
          "getDeedInfo(uint256)",
          "tokenURI(uint256)",
          "getTraitValue(uint256,bytes32)",
          "getValidationStatus(uint256)",
          "contractURI()",
          "royaltyInfo(uint256,uint256)",
          "setToDefaultSecurityPolicy()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "mintAsset(address,uint8,string,string,string,address)",
          "burnAsset(uint256)",
          "burnBatchAssets(uint256[])",
          "validateDeed(uint256,bool,address)",
          "hasRole(bytes32,address)",
          "setApprovedMarketplace(address,bool)",
          "isApprovedMarketplace(address)",
          "setRoyaltyEnforcement(bool)",
          "isRoyaltyEnforced()",
          "getTransferValidator()",
          "setTransferValidator(address)",
          "getTransferValidationFunction()",
          "supportsInterface(bytes4)",
          "getAssetType(uint256)",
          "isValidated(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/interfaces/IERC7572.sol:IERC7572": {
        "src": "src/core/interfaces/IERC7572.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenURI(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/interfaces/IFundManager.sol:IFundManager": {
        "src": "src/core/interfaces/IFundManager.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCommissionPercentage(uint256)",
          "setFeeReceiver(address)",
          "setValidatorRegistry(address)",
          "setDeedNFT(address)",
          "mintDeedNFT(address,uint8,string,string,string,address,address)",
          "mintBatchDeedNFT(struct IFundManager.DeedMintData[])",
          "withdrawValidatorFees(address,address)",
          "getCommissionBalance(address,address)",
          "getCommissionPercentage()",
          "formatFee(uint256)",
          "deedNFT()",
          "validatorRegistry()",
          "feeReceiver()",
          "commissionPercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/interfaces/IMetadataRenderer.sol:IMetadataRenderer": {
        "src": "src/core/interfaces/IMetadataRenderer.sol:10",
        "inherit": [
          "src/core/interfaces/IERC7572.sol:IERC7572"
        ],
        "libraries": [],
        "methods": [
          "tokenURI(address,uint256)",
          "updateAssetDetails(uint256,uint8,string)",
          "setTokenGallery(uint256,string[])",
          "getTokenGallery(uint256)",
          "setTokenFeatures(uint256,string[])",
          "getTokenFeatures(uint256)",
          "setTokenDocument(uint256,string,string)",
          "getTokenDocument(uint256,string)",
          "getTokenDocumentTypes(uint256)",
          "setTokenDocuments(uint256,string[],string[])",
          "removeTokenDocument(uint256,string)",
          "setDeedNFT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/interfaces/IValidator.sol:IValidator": {
        "src": "src/core/interfaces/IValidator.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "validateDeed(uint256)",
          "validateOperatingAgreement(string)",
          "supportsAssetType(uint256)",
          "defaultOperatingAgreement()",
          "operatingAgreementName(string)",
          "registerOperatingAgreement(string,string)",
          "getServiceFee(address)",
          "setServiceFee(address,uint256)",
          "addWhitelistedToken(address)",
          "removeWhitelistedToken(address)",
          "isTokenWhitelisted(address)",
          "getValidationCriteria(uint256)",
          "setValidationCriteria(uint256,string)",
          "clearFieldRequirements(uint256)",
          "addFieldRequirementsBatch(uint256,string[],string[])",
          "setPrimaryDeedNFT(address)",
          "addCompatibleDeedNFT(address)",
          "removeCompatibleDeedNFT(address)",
          "isCompatibleDeedNFT(address)",
          "tokenURI(uint256)",
          "getRoyaltyFeePercentage(uint256)",
          "setRoyaltyFeePercentage(uint96)",
          "getRoyaltyReceiver()",
          "setRoyaltyReceiver(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/core/interfaces/IValidatorRegistry.sol:IValidatorRegistry": {
        "src": "src/core/interfaces/IValidatorRegistry.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getValidatorOwner(address)",
          "getValidatorInfo(address)",
          "getValidatorsForAssetType(uint256)",
          "isValidatorActive(address)",
          "isValidatorRegistered(address)",
          "getValidatorName(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/extensions/Fractionalize.sol:Fractionalize": {
        "src": "src/extensions/Fractionalize.sol:39",
        "version": {
          "withMetadata": "3d53e0cf389cd8aefb5ef3b77f82cabeefe75e36f479b405249fee8f207910a2",
          "withoutMetadata": "82cc9f7490dd50ad346035cab0564a2edec4b89cbb0ab2c46ec31238c7afb7ee",
          "linkedWithoutMetadata": "82cc9f7490dd50ad346035cab0564a2edec4b89cbb0ab2c46ec31238c7afb7ee"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(address,address)",
          "createFraction((uint8,uint256,string,string,string,string,uint256,bool,uint256))",
          "mintShare(uint256,uint256,address)",
          "batchMintShares((uint256,uint256[],address[]))",
          "burnShare(uint256,uint256)",
          "unlockAsset((uint256,address,bool))",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
          "getFractionBasicInfo(uint256)",
          "getFractionExtendedInfo(uint256)",
          "getFractionOwnershipInfo(uint256)",
          "getShareMetadata(uint256,uint256)",
          "getApprovals(uint256,address)",
          "pause()",
          "unpause()",
          "supportsInterface(bytes4)",
          "canReceiveShares(uint256,address)",
          "getVotingPower(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "201",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "301",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "deedNFT",
              "offset": 0,
              "slot": "351",
              "type": "t_contract(IDeedNFT)18423",
              "contract": "Fractionalize",
              "src": "src/extensions/Fractionalize.sol:56"
            },
            {
              "label": "subdivideNFT",
              "offset": 0,
              "slot": "352",
              "type": "t_contract(ISubdivide)19099",
              "contract": "Fractionalize",
              "src": "src/extensions/Fractionalize.sol:59"
            },
            {
              "label": "fractions",
              "offset": 0,
              "slot": "353",
              "type": "t_mapping(t_uint256,t_struct(FractionInfo)19172_storage)",
              "contract": "Fractionalize",
              "src": "src/extensions/Fractionalize.sol:106"
            },
            {
              "label": "nextFractionId",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "Fractionalize",
              "src": "src/extensions/Fractionalize.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDeedNFT)18423": {
              "label": "contract IDeedNFT",
              "numberOfBytes": "20"
            },
            "t_contract(ISubdivide)19099": {
              "label": "contract ISubdivide",
              "numberOfBytes": "20"
            },
            "t_enum(FractionAssetType)19131": {
              "label": "enum Fractionalize.FractionAssetType",
              "members": [
                "DeedNFT",
                "SubdivisionNFT"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(FractionInfo)19172_storage)": {
              "label": "mapping(uint256 => struct Fractionalize.FractionInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(FractionInfo)19172_storage": {
              "label": "struct Fractionalize.FractionInfo",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "collectionUri",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalShares",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "activeShares",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSharesPerWallet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "requiredApprovalPercentage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "burnable",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                },
                {
                  "label": "assetType",
                  "type": "t_enum(FractionAssetType)19131",
                  "offset": 2,
                  "slot": "8"
                },
                {
                  "label": "originalTokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "collectionAdmin",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "shareMetadata",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "transferApprovals",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "adminApprovals",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/extensions/Fractionalize.sol:ISubdivide": {
        "src": "src/extensions/Fractionalize.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/extensions/Subdivide.sol:Subdivide": {
        "src": "src/extensions/Subdivide.sol:27",
        "version": {
          "withMetadata": "b222b21a236a0b5b6281c2e6e1a9d443464069498b40458b9bafdb3e4dfc57d5",
          "withoutMetadata": "7d168369c1db0d85e59d87c55eea04d92163adf9676a7887360549358853e033",
          "linkedWithoutMetadata": "7d168369c1db0d85e59d87c55eea04d92163adf9676a7887360549358853e033"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol:IERC1967Upgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "createSubdivision(uint256,string,string,string,string,uint256,bool)",
          "setBurnable(uint256,bool)",
          "setUnitMetadata(uint256,uint256,string)",
          "mintUnit(uint256,uint256,address)",
          "batchMintUnits(uint256,uint256[],address[])",
          "burnUnit(uint256,uint256)",
          "deactivateSubdivision(uint256)",
          "getUnitMetadata(uint256,uint256)",
          "uri(uint256)",
          "pause()",
          "unpause()",
          "supportsInterface(bytes4)",
          "transferCollectionAdmin(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "201",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "251",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "301",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
            },
            {
              "label": "deedNFT",
              "offset": 0,
              "slot": "351",
              "type": "t_contract(IDeedNFT)18423",
              "contract": "Subdivide",
              "src": "src/extensions/Subdivide.sol:46"
            },
            {
              "label": "subdivisions",
              "offset": 0,
              "slot": "352",
              "type": "t_mapping(t_uint256,t_struct(SubdivisionInfo)20804_storage)",
              "contract": "Subdivide",
              "src": "src/extensions/Subdivide.sol:82"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "353",
              "type": "t_array(t_uint256)50_storage",
              "contract": "Subdivide",
              "src": "src/extensions/Subdivide.sol:148"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IDeedNFT)18423": {
              "label": "contract IDeedNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(SubdivisionInfo)20804_storage)": {
              "label": "mapping(uint256 => struct Subdivide.SubdivisionInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1579_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(SubdivisionInfo)20804_storage": {
              "label": "struct Subdivide.SubdivisionInfo",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "collectionUri",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalUnits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "activeUnits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "burnable",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                },
                {
                  "label": "collectionAdmin",
                  "type": "t_address",
                  "offset": 2,
                  "slot": "6"
                },
                {
                  "label": "unitMetadata",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/libraries/JSONUtils.sol:JSONUtils": {
        "src": "src/libraries/JSONUtils.sol:10",
        "version": {
          "withMetadata": "19d154a0a76b3282414de931fdc492c0dc7f3e51bc8974ccfbd258403d03117e",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "src/libraries/StringUtils.sol:StringUtils"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      },
      "src/libraries/StringUtils.sol:StringUtils": {
        "src": "src/libraries/StringUtils.sol:8",
        "version": {
          "withMetadata": "6cf40e86de446d1aaa691a01fa8eb6dcf455ec88cb0ba39eb9a779d07b66376e",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.29"
      }
    }
  ]
}