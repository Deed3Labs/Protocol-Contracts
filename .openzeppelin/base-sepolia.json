{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xB131eaae640d9C8e47A74Fc03A4e1688225A0312",
      "txHash": "0x0b40c95a48e4958bac4d1dc1a33575e026efd4fd95c349a159965de01e665b10",
      "kind": "uups"
    },
    {
      "address": "0xFF09E012224d1cd37a32492C1ae173C4aF9cf7E7",
      "txHash": "0x47b6a6262a9b1d076764f55c8c4f113ecd8139c4ddfd9a19d58f663e4cd39b99",
      "kind": "uups"
    },
    {
      "address": "0x10A782c9F9061107B167CEeADd3604094950C67A",
      "txHash": "0x1450b135b493833edc88f567fc1dd45491a5aca55b1c35cc79f16a9b06ae256d",
      "kind": "uups"
    },
    {
      "address": "0x8259c14EdFC19b686A6764c153c723507d794CD4",
      "txHash": "0x816ae6a7e270f703a76e7d5eeed145dcc470b5189b146db65421aa92ed49df37",
      "kind": "uups"
    },
    {
      "address": "0x1Ef98925E362c28b5E37A3d8e2416a99b6589f83",
      "txHash": "0xcf795cf14ae6e693465169dc31eec4c36cb63f76962f585618bb65ccb1bc6f46",
      "kind": "uups"
    },
    {
      "address": "0x2d21B21D73A6d17Fd7FbF5acA3Eb820e2c375F03",
      "txHash": "0xb081d8b1469373fe5b026cd0da2adce5b3b6dc61bfaccc327f8cd3466e9fb9f2",
      "kind": "uups"
    },
    {
      "address": "0x3107260e9aE8e85D10d965d952ce897106a23472",
      "txHash": "0x9031900509276ee342a292f4d119690b8d10aa8a18cc091b7b0216bce11d7246",
      "kind": "uups"
    },
    {
      "address": "0x075df1A0b9d67dfEBB12ADC2EC80d25eA47720E9",
      "txHash": "0x14b53d7aa741c5435990d4d24072bb0ffe9e3c74ccdbc0290100e27c0754ecbb",
      "kind": "uups"
    },
    {
      "address": "0x6EC06bedd460E34d472c2DC1e9f72418AaaddcbB",
      "txHash": "0x72235576e21d9b83e118632185008b9397442b7ef326a80cf3e4272b41f7c06e",
      "kind": "uups"
    },
    {
      "address": "0x9D4Eb840bAAa6E4C59085fAa0f202F733b4a6675",
      "txHash": "0x25aa2577b89f14e1e0202d24bc41eb0f6db5738f069286beb7734ed402b2dd6a",
      "kind": "uups"
    },
    {
      "address": "0xa709CB8D228C6aFCD56f09F0eDD14632DbCBBe85",
      "txHash": "0xfc11be03066ddd09dffbce9e2fff2a46237d5cd59474d20e154832b95f0c9e4e",
      "kind": "uups"
    },
    {
      "address": "0x5a63BD7E05E1a46BD529B56aEe0169532bb38304",
      "txHash": "0x8e4499bfe09b7cc950d0a5e15382ab7ad981d2a20213ee6c70229f94006008cb",
      "kind": "uups"
    },
    {
      "address": "0x1156e467b24dc6Fc6C99C6C6Ca70Cac417565ee3",
      "txHash": "0xa56d1201d583222d83518c4fdfa324d32a33b3a36756ffb16ec4c1a15eb76c42",
      "kind": "uups"
    },
    {
      "address": "0x2d728A84a044E30f989fE324a2F31E7bc794d7EC",
      "txHash": "0x9d5b9df5f4f91540f2dda2e26c27772f110b4f2e387fa79e0cb177235c31cf1d",
      "kind": "uups"
    },
    {
      "address": "0x55DF927D4e0195229Dc51444585cd54f2b2A1611",
      "txHash": "0x6ff72420be30944ebf9860d206ceb754f65cd0ad494bff1398a2ddc9cb0eb6da",
      "kind": "uups"
    },
    {
      "address": "0x9b30B668942d1DD179C7be7C2C61c957d5143b81",
      "txHash": "0x77e4b8944bc8b8fbd34760c2088f9eaa5e7aa0fc53bea63e2f49cf03e6e5dd1a",
      "kind": "uups"
    },
    {
      "address": "0x0Ea8246E1d41627a56c5A8596eFcec0B5BBE7D15",
      "txHash": "0x6f32dc412b8bb99ad8c2b93d883495b19125750c3c6b4ad287aa5e4bdf2be844",
      "kind": "uups"
    },
    {
      "address": "0x254e1b0Ea22dC7021B7409456550cd47c50C5EB3",
      "txHash": "0xcb0d4e5224fdd7f78d27a5c8f41c38f3a35b3290b10a3c13be0721552627852c",
      "kind": "uups"
    },
    {
      "address": "0x62915905C6bD4b442aBC5B0c73F2815073041946",
      "txHash": "0xc0f9078335d09f4ea7a093661a1317df8b68a41447521bc2f55eed00b49d1853",
      "kind": "uups"
    },
    {
      "address": "0x8E3f676570a57a90F78a2142a2c8663AF7720760",
      "txHash": "0x45445f305f7815d99ddbba4e723071b59cdc5fe5de597360555711bdd44ff058",
      "kind": "uups"
    },
    {
      "address": "0xf52B285295b1f86bD9E69994293a0170083Df332",
      "txHash": "0x04332d3f089444db110d5c955b0f5b4a2a0a2730360e5ce9c931dc07a6d48675",
      "kind": "uups"
    },
    {
      "address": "0xC5C835f410eB48aF27E8DD751fA45d022A2e0f37",
      "txHash": "0x8cd147bb362999381e7bf0805631fde1c2f56ecd264f657d425c73f08e707bc1",
      "kind": "uups"
    },
    {
      "address": "0xddC128c737e8076d654DAb2b1b272C81866acbB0",
      "txHash": "0xc2b449488bb8b67f702b8e2c7c967449942295f01aaa00682a42df5978f7844d",
      "kind": "uups"
    },
    {
      "address": "0x173b4d47214088D3eC5759d5C44e5d6b0bCA7c5b",
      "txHash": "0x963347a6e5f1b22e91118578d53536f8265abae0d8357a6b2c6c9247edaee696",
      "kind": "uups"
    },
    {
      "address": "0x8482e40DC465c076AfedeEF6D55d0460D9Cb87b2",
      "txHash": "0x16661cce3fd09bcdf176ad82a96a7a5c42ee6a0b2578321fedda7acc2621a66a",
      "kind": "uups"
    },
    {
      "address": "0xFD804C13c2FE52053daBc14A40cb901f0726534d",
      "txHash": "0x3acb4d427d51b6ad6cd029dbbfaf310cb1a0b47b244be69426810b06639760a3",
      "kind": "uups"
    },
    {
      "address": "0x57f9CE67b16248C92A2C83587487284dd210a790",
      "txHash": "0x84a41b696856af6f8bbf81662c78f337394fb7b67f8eaa924856bbd1636bbb09",
      "kind": "uups"
    },
    {
      "address": "0xF488B22D0bA91FF07792fdF9dB2979AC37Cb2CD5",
      "txHash": "0x2176a34a2e2fc9467194535befec5741f01f9bcf638911eeedeb9320ac73bcea",
      "kind": "uups"
    },
    {
      "address": "0x37299E0cD45854B33DF642b76Ec5C46F902CeBdD",
      "txHash": "0x29b2a491a785dafbe0f666ab08d48b97f60ee991ca22886764001d03105130c2",
      "kind": "uups"
    },
    {
      "address": "0x2D12daa24568997e53747747e435E3d658f0AC6d",
      "txHash": "0x0c8d7c1c36a7c8c9369ed20dcb2b888ce54447ee651f18399f7eec5def3fa834",
      "kind": "uups"
    },
    {
      "address": "0x7e9ef8db99f8211436549ff410F4EFE54F3F04aE",
      "txHash": "0x9971d36048b1f0dd2a4f46839eabf290dd82fe79d4bbacdc165f02f786cbbe44",
      "kind": "uups"
    },
    {
      "address": "0x7e1d48892d452c807dA9DB25995CcfC48e706e13",
      "txHash": "0x6d32e040de8fdfee249a520959c34d4d29069e777d148e9093e0a2bfeb501d04",
      "kind": "uups"
    },
    {
      "address": "0x64c728AcB512EeE18C8382A57aFfc2d95daA9226",
      "txHash": "0xc4fd541bc16bf5c9a80766c55fc2138dc2b9a4cac9190204e32a4990efc97f43",
      "kind": "uups"
    },
    {
      "address": "0xc88FD6DA1Aa4E9C64f7755dDC838aa5013458E0a",
      "txHash": "0x6b8ccb8a2dbe447001ac5356c9f43a632eef206e1af66a26c068d9684803f904",
      "kind": "uups"
    },
    {
      "address": "0x776e280F57d42719D0aFA7376fa3F45453cb46C1",
      "txHash": "0xacc0a4249d64813f1f6955ccf8ba009c0652163b9d16561504c53eccc9242716",
      "kind": "uups"
    },
    {
      "address": "0x8942cCFc23e08275846C93910b726cB12FB5B2B4",
      "txHash": "0x48c8383d936db53f3040bbfdfa98e843b9e82bddbd8f92dbd32e2a8fd653183a",
      "kind": "uups"
    },
    {
      "address": "0x490D3501A63D135A4E608A2ABE509611f89042e8",
      "txHash": "0x08fe1f6e229637c2022c6537713387dd0a50b7ba0d155f60dfb70d6b8c2c4390",
      "kind": "uups"
    },
    {
      "address": "0x979E6cC741A8481f96739A996D06EcFb9BA2bc91",
      "txHash": "0xef735e759d3af81a1e3794acd38ef9cde2050772884e6f2a5946c88a5098f1e5",
      "kind": "uups"
    },
    {
      "address": "0x849e13500658a789311923b86b0eB60a87C870E5",
      "txHash": "0x059c805cefc02cb9c8427959fcbbafa18c30613f675f027fd66cb5438b379b7b",
      "kind": "uups"
    },
    {
      "address": "0x18C53C0D046f98322954f971c21125E4443c79b9",
      "txHash": "0x630ed8eb193f895f9205e55f8bf875ff7d88d2155d2a4bfa96b5c8646aeb6ff3",
      "kind": "uups"
    },
    {
      "address": "0x1a4e89225015200f70e5a06f766399a3de6e21E6",
      "txHash": "0xb39e04431b042d8c1380911c0307c20272d976ff9d6a2987295f66493213295a",
      "kind": "uups"
    },
    {
      "address": "0x73ea6B404E6B81E7Fe6B112605dD8661B52d401e",
      "txHash": "0x15edddf53b3269eda9abaaa2856a566b8e64e560aca33b0b223b858821dcb075",
      "kind": "uups"
    },
    {
      "address": "0xAc50869E89004aa25A8c1044195AC760A7FC48BE",
      "txHash": "0xc47c1b7ae4d971c5f16f6578921c4401c4f458eb35a0e9d92cb7b0a29e33d6d7",
      "kind": "uups"
    },
    {
      "address": "0xc8A9cb45776cd1e67a449B5dCfF8338796d510cD",
      "txHash": "0x3680b349b3d0759a59b2a9ed067792d5f61b09919777dc3d7ed11dbf87afd6c5",
      "kind": "uups"
    },
    {
      "address": "0x2635EC8D34ec63CC1Fbf9463AB68f8AaF4cA7E44",
      "txHash": "0x0815d623ed2a976677bd771e6e9da6c004ae12adfd12f8e5a2d3fbee6efc5d87",
      "kind": "uups"
    },
    {
      "address": "0x3c947D71cb1698dFd4D7551b87E17306865C923F",
      "txHash": "0xaab1f5130b62aca9fda7a4c6573317ab6cc3afff1490c991f53110a2ca4e668c",
      "kind": "uups"
    },
    {
      "address": "0x1efA2AbaebA16647001C8973c572827934B59eD0",
      "txHash": "0x195bdd66a59f5d47999a8ddb7c82bf49a763738ed5e51122c44e4b4cad4b1bae",
      "kind": "uups"
    },
    {
      "address": "0x28292449d547a8ee85aea05C35e609EaC4c68Dc6",
      "txHash": "0xb41b2f5dcb880fe85826a47a76f065fae23425ee45446ae168885bdc7c14cd7a",
      "kind": "uups"
    },
    {
      "address": "0x3E513d3c3c2845B5cAc4FA5e21C0f7f80f9328dc",
      "txHash": "0xf40911fa0cc6e37724e389e13ca26445836647b471a2defd0a5b96229228d3c3",
      "kind": "uups"
    },
    {
      "address": "0xeC464847C664Cc208478adbe377f7Db19e199823",
      "txHash": "0x0abde4570f97813298896df60c06ce084742c4f31aa0b9b8dca8b2541900c6e4",
      "kind": "uups"
    }
  ],
  "impls": {
    "5562ae3ae5a3facbf41b651f4165202b6593ae6137ab6d35f4ec51a6b5733c8b": {
      "address": "0x2fb9F9305C6FF9eefbDcaBab8147a3b39b1dA532",
      "txHash": "0xba24c2cc448df853e1674af11c2f0160af00f81b63b5cf2973f24bc81a720fb8",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)19887_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:63"
          },
          {
            "label": "assetTypeValidators",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)19887_storage)": {
            "label": "mapping(address => struct ValidatorRegistry.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)19887_storage": {
            "label": "struct ValidatorRegistry.ValidatorInfo",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supportedAssetTypes",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "675e9af43f4bf59e2776ac0f7bb5343a3ae7c7a4e3aaef4b15ea79d5b4d59071": {
      "address": "0x36DA2Db9d4a879453B77EbC4B7C410bF5643886E",
      "txHash": "0x6cf4dcd361452f8cf8fa628cb60d16d3fcd9387c27eab5c202a180b0e941902f",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:66"
          },
          {
            "label": "assetTypeImageURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:69"
          },
          {
            "label": "invalidatedImageURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:72"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)14303_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:75"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IDeedNFT)20757",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:78"
          },
          {
            "label": "compatibleDeedContracts",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:81"
          },
          {
            "label": "deedContractsList",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)20757": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)14303_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)14303_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8e25a9aaad41323751b3b375295d5ee5718163cb576a6f25c4a10b633367f191": {
      "address": "0x5340B3dB5bD6F15251Af88bE521C74C8342cC9d9",
      "txHash": "0xa17aa3dd9a4c1af3ea15584e0ff59ccf96f642fb0f5469ec71dd612e3ea1545d",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:73"
          },
          {
            "label": "defaultOperatingAgreementUri",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:76"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IDeedNFT)20757",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:80"
          },
          {
            "label": "supportedAssetTypes",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:84"
          },
          {
            "label": "operatingAgreements",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:88"
          },
          {
            "label": "deedMetadata",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:92"
          },
          {
            "label": "validationCriteria",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:97"
          },
          {
            "label": "compatibleDeedNFTs",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:100"
          },
          {
            "label": "primaryDeedNFT",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:103"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:107"
          },
          {
            "label": "serviceFee",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:111"
          },
          {
            "label": "serviceFeesBalance",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:114"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "314",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:122"
          },
          {
            "label": "royaltyFeePercentage",
            "offset": 0,
            "slot": "362",
            "type": "t_uint96",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:127"
          },
          {
            "label": "royaltyReceiver",
            "offset": 12,
            "slot": "362",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)20757": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "2c51e6409f754e3b4132535deb926c09ccef4650d3dd9baa808172825b6ad341": {
      "address": "0x72b4FF458d36af0Fe697AbDf8fd9ed8FCD6fDC59",
      "txHash": "0xed78f50bb55e6cf051022faeeeb6c92d56f943db8ae8ac9b46da7842e17d8cf0",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "nexttokenId",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:61"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "402",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:62"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "403",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:63"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:64"
          },
          {
            "label": "metadataRenderer",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:65"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:69"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "407",
            "type": "t_bool",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:70"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "407",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:71"
          },
          {
            "label": "_tokenTraits",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:78"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:84"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "410",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:90"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)45_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:108"
          },
          {
            "label": "_activeTokenCount",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:113"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "457",
            "type": "t_contract(IFundManager)20962",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IFundManager)20962": {
            "label": "contract IFundManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bdad14f4d9a2e142978eb3d76b05844812a39f0cd6d5c24dfdc500f4bab6a32e": {
      "address": "0xF37d119723DeFeCF6f67E2153b6e344AEaE43C6F",
      "txHash": "0x6e730e713f024b4dacdbc05c98f6fc173c43d02811fcf9bdd2f57d232426878e",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "deedNFTContract",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:44"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:45"
          },
          {
            "label": "_commissionPercentage",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:46"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:47"
          },
          {
            "label": "validatorBalances",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dba2c2d6b0e04aae44539e8a8a8343492c339574757f4ac32c3b9d90854b6f07": {
      "address": "0x3E909c302Be215f2B11B5E601f27EA6025B9eCBD",
      "txHash": "0x36ecd54d6d4c771fab63a3cf99e3eeb7e5e246fcf017d4fffa5d1c98f48c0c6f",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:66"
          },
          {
            "label": "assetTypeImageURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:69"
          },
          {
            "label": "invalidatedImageURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:72"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)14303_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:75"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IDeedNFT)20745",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:78"
          },
          {
            "label": "compatibleDeedContracts",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:81"
          },
          {
            "label": "deedContractsList",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)20745": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)14303_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)14303_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c1174ea0ba2c1501f29a36c2058dec44c3756877ef66c8d3f10684cbdc5afe0d": {
      "address": "0x7E841F402f7F4d371729E8C51Cff79341182b4e8",
      "txHash": "0x907d8b0b9c97aab5c04df1693bc93971bfbafd6cc1785a63199575c0ab744fdc",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:64"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:67"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:69"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IDeedNFT)8384",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:70"
          },
          {
            "label": "compatibleDeedContracts",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:71"
          },
          {
            "label": "deedContractsList",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)8384": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)4397_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3b8a1c2fcc84ccd697466d1544f857d914031ae70b76bc87f7440d2a25e000a9": {
      "address": "0x08607C10aA3f04Fa8964050bDc317A526b9B1A83",
      "txHash": "0x4a03dcfe3be607db49e8e13e326423830390eec156ab78fa6673df5500065c6b",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "nexttokenId",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:60"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "402",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:61"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "403",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:62"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:63"
          },
          {
            "label": "metadataRenderer",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:64"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:68"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "407",
            "type": "t_bool",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:69"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "407",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:70"
          },
          {
            "label": "_tokenTraits",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:77"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:83"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "410",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)45_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:107"
          },
          {
            "label": "_activeTokenCount",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:112"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "457",
            "type": "t_contract(IFundManager)20892",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IFundManager)20892": {
            "label": "contract IFundManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0322a445a4a0d97ab4d943632f444177ce5825fd15a23fe22a3e3ee9a799a1b7": {
      "address": "0x8AF8e97f2219666069DFd8a9F5cE548b765C0D06",
      "txHash": "0x8325957f5f1fdac8f4f7b9254616a2c9fbe16ea737bf084af0b644d172e6786a",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)20197_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:63"
          },
          {
            "label": "assetTypeValidators",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)20197_storage)": {
            "label": "mapping(address => struct ValidatorRegistry.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)20197_storage": {
            "label": "struct ValidatorRegistry.ValidatorInfo",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supportedAssetTypes",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d91f1a938f0b09e677f7acf5ae734dfec7e9afd657c60eb2b6728ddca3ad2caa": {
      "address": "0x40246fBc41597639965fca69B28e14AbA4F765FA",
      "txHash": "0x332f19a4fe58966406b8a823c3d82165d297de53d81945a3da2033d30a9431e1",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:66"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:69"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:72"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IDeedNFT)8518",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:75"
          },
          {
            "label": "compatibleDeedContracts",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:78"
          },
          {
            "label": "deedContractsList",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)8518": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)4397_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6a3429a773d0034704a18f7c1a0ee4e3ffc2998dbfaea3424fd77e09609be98f": {
      "address": "0x17e67338a6570d6093be554217Ad1196FDE687bA",
      "txHash": "0x0b0b0cd13fab7625d28cb8d7a10fe9fb57380995c6a8b32ef2f0d744c270ab78",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:73"
          },
          {
            "label": "defaultOperatingAgreementUri",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:76"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IDeedNFT)21067",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:80"
          },
          {
            "label": "supportedAssetTypes",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:84"
          },
          {
            "label": "operatingAgreements",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:88"
          },
          {
            "label": "deedMetadata",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:92"
          },
          {
            "label": "validationCriteria",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:97"
          },
          {
            "label": "compatibleDeedNFTs",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:100"
          },
          {
            "label": "primaryDeedNFT",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:103"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:107"
          },
          {
            "label": "serviceFee",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:111"
          },
          {
            "label": "serviceFeesBalance",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:114"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "314",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:122"
          },
          {
            "label": "royaltyFeePercentage",
            "offset": 0,
            "slot": "362",
            "type": "t_uint96",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:127"
          },
          {
            "label": "royaltyReceiver",
            "offset": 12,
            "slot": "362",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)21067": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "5e81355712b253ed159228b4a89a0be06532920b500b71d97dfb6ec99f931710": {
      "address": "0x878b6DF6f495d3541797e4F38d1048dBA2203DF4",
      "txHash": "0xb54f6690872c8e933d93bbde14c05b0a56a50b4e88d138810f82d6f1502bf66f",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "nexttokenId",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:60"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "402",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:61"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "403",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:62"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:63"
          },
          {
            "label": "metadataRenderer",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:64"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:68"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "407",
            "type": "t_bool",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:69"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "407",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:70"
          },
          {
            "label": "_tokenTraits",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:77"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:83"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "410",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)45_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:107"
          },
          {
            "label": "_activeTokenCount",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:112"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "457",
            "type": "t_contract(IFundManager)21258",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IFundManager)21258": {
            "label": "contract IFundManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cabea888a92810613a2a700e4df1fcbd6f1fd90723e25239fd5d5cbad3b06166": {
      "address": "0xB1023f67d6D6497b75b8D39Ac0101De8A7f5fC2A",
      "txHash": "0x2a2da2fe4dcf2e1b5be68318a1f271996267399e5f29e39f0ff66c5427ea75f6",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:66"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:69"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:72"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IDeedNFT)8208",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:75"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)8208": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)4397_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a3e0a03334f71f69c4b86734e8eee7599753fc38bec358c73f78e1491c1e266b": {
      "address": "0x208356E4f3360776e997A58C427a47F1D86aD6a8",
      "txHash": "0xda825f4994b16f0b7d2d8af5b85687d110652e1f22c78396b150c0b979a337f8",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:66"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:69"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IDeedNFT)8295",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)8295": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)4397_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)4397_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "758cc7446ce9638160a13bd29b4c0a0028d27c86919ad3dd42f9279922a4ed12": {
      "address": "0xcaF428B23365feB5E64562211609a6FB6e323275",
      "txHash": "0xa15aab138b863a83824eed8a540e24303659bffb0c1e7caf15247c6aedc90182",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)21002_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:65"
          },
          {
            "label": "assetTypeValidators",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:69"
          },
          {
            "label": "validatorAddresses",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:72"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:74"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:75"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:117"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)21002_storage)": {
            "label": "mapping(address => struct ValidatorRegistry.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)21002_storage": {
            "label": "struct ValidatorRegistry.ValidatorInfo",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supportedAssetTypes",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "710ed0adf7e5e84807c8c26b3a5984647e47c13bdefcc08c3bc57726c18a66f8": {
      "address": "0x85E9233B4e9db40B023Be8197e6e1C2ffcf392B5",
      "txHash": "0x75c99c08168ac9677d99d46ccf58b070fae3f87ab96c409e6b4fcc125f5d2484",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:115"
          },
          {
            "label": "defaultBackgroundColors",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:118"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)15803_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:121"
          },
          {
            "label": "tokenFeatures",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(TokenFeatures)15750_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:124"
          },
          {
            "label": "assetConditions",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(AssetCondition)15764_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:127"
          },
          {
            "label": "legalInfo",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LegalInfo)15780_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:130"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(IDeedNFT)22856",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Document)15809_storage)dyn_storage": {
            "label": "struct MetadataRenderer.Document[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)22856": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetCondition)15764_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.AssetCondition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LegalInfo)15780_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.LegalInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenFeatures)15750_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenFeatures)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)15803_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetCondition)15764_storage": {
            "label": "struct MetadataRenderer.AssetCondition",
            "members": [
              {
                "label": "generalCondition",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastInspectionDate",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "knownIssues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "improvements",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "additionalNotes",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Document)15809_storage": {
            "label": "struct MetadataRenderer.Document",
            "members": [
              {
                "label": "docType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "documentURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LegalInfo)15780_storage": {
            "label": "struct MetadataRenderer.LegalInfo",
            "members": [
              {
                "label": "jurisdiction",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "registrationNumber",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registrationDate",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "documents",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "restrictions",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "additionalInfo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenFeatures)15750_storage": {
            "label": "struct MetadataRenderer.TokenFeatures",
            "members": [
              {
                "label": "features",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetadata)15803_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "external_link",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "documents",
                "type": "t_array(t_struct(Document)15809_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5d08225ad2c496189221dbb6725bfa156266a9c241c04e0c03b2bff40b423b2f": {
      "address": "0xB458fb5F6866C146D48dEFe44faAEccFc4ACD603",
      "txHash": "0x10821f21b97b3961744f1c5f05fc0102b94cc4cf439e44e8bf208059113c6f6d",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:78"
          },
          {
            "label": "defaultOperatingAgreementUri",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:81"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IDeedNFT)21822",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:85"
          },
          {
            "label": "supportedAssetTypes",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:89"
          },
          {
            "label": "operatingAgreements",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:93"
          },
          {
            "label": "validationCriteria",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(ValidationCriteria)18152_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:103"
          },
          {
            "label": "compatibleDeedNFTs",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:106"
          },
          {
            "label": "primaryDeedNFT",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:109"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:113"
          },
          {
            "label": "serviceFee",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:117"
          },
          {
            "label": "serviceFeesBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:120"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "362",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:123"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "363",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:128"
          },
          {
            "label": "royaltyFeePercentage",
            "offset": 0,
            "slot": "411",
            "type": "t_uint96",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:133"
          },
          {
            "label": "royaltyReceiver",
            "offset": 12,
            "slot": "411",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:136"
          },
          {
            "label": "registeredAgreements",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:141"
          },
          {
            "label": "registeredAgreementURIs",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:144"
          },
          {
            "label": "royaltyBalances",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:147"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)21822": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValidationCriteria)18152_storage)": {
            "label": "mapping(uint256 => struct Validator.ValidationCriteria)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidationCriteria)18152_storage": {
            "label": "struct Validator.ValidationCriteria",
            "members": [
              {
                "label": "requiredTraits",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "additionalCriteria",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requireOperatingAgreement",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requireDefinition",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "1d5263c36952e01cfe3226349b84a3cc0faa71bc43bab4dff0f1206634870c91": {
      "address": "0x8c3b2e5D2841BcdC68dB35dDc5d9e7a34eEB928c",
      "txHash": "0xc721fcf564423ef86ff27b487201e90471d6441ba9ea6bdcc0a74de8d9de9849",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "nexttokenId",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:62"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "452",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:63"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "453",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:64"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "454",
            "type": "t_string_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:65"
          },
          {
            "label": "metadataRenderer",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:66"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:70"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "457",
            "type": "t_bool",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:71"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "457",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:72"
          },
          {
            "label": "_tokenTraits",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:79"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:85"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "460",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:91"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "461",
            "type": "t_array(t_uint256)45_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:109"
          },
          {
            "label": "_activeTokenCount",
            "offset": 0,
            "slot": "506",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:114"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IFundManager)23042",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:117"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IFundManager)23042": {
            "label": "contract IFundManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8699aad1bf300074769475ffa8fa62b6d7878ca394406f3c9cc00ad42552f3a4": {
      "address": "0xfbc3499FA053d6b59439326Fb0ADbd272a76c5FD",
      "txHash": "0x1f072ec01279532b2f6924e1e6e36d486d33a3392990a9a6aec3b5e0d5ac8596",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "compatibleDeedNFTs",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:45"
          },
          {
            "label": "allCompatibleDeedNFTs",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:46"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:48"
          },
          {
            "label": "_commissionPercentage",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:49"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:50"
          },
          {
            "label": "validatorBalances",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:53"
          },
          {
            "label": "allAssignedValidators",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:56"
          },
          {
            "label": "isAssignedValidator",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:57"
          },
          {
            "label": "whitelistedTokens",
            "offset": 0,
            "slot": "309",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:60"
          },
          {
            "label": "isWhitelistedToken",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9e1f59422b5e1862e1b10d7ce3b3ca4bc9f9c9d56828fcc2dde1314f67cdcc40": {
      "address": "0x457594c0168582c602894873D9e4a565499Fe7A8",
      "txHash": "0xe72a42061bde0f21132a9830d2341ac817ad700a31260d49af5750decd41d854",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:115"
          },
          {
            "label": "defaultBackgroundColors",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:118"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)15803_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:121"
          },
          {
            "label": "tokenFeatures",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(TokenFeatures)15750_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:124"
          },
          {
            "label": "assetConditions",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(AssetCondition)15764_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:127"
          },
          {
            "label": "legalInfo",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LegalInfo)15780_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:130"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(IDeedNFT)22858",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Document)15809_storage)dyn_storage": {
            "label": "struct MetadataRenderer.Document[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)22858": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetCondition)15764_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.AssetCondition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LegalInfo)15780_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.LegalInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenFeatures)15750_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenFeatures)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)15803_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetCondition)15764_storage": {
            "label": "struct MetadataRenderer.AssetCondition",
            "members": [
              {
                "label": "generalCondition",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastInspectionDate",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "knownIssues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "improvements",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "additionalNotes",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Document)15809_storage": {
            "label": "struct MetadataRenderer.Document",
            "members": [
              {
                "label": "docType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "documentURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LegalInfo)15780_storage": {
            "label": "struct MetadataRenderer.LegalInfo",
            "members": [
              {
                "label": "jurisdiction",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "registrationNumber",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registrationDate",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "documents",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "restrictions",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "additionalInfo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenFeatures)15750_storage": {
            "label": "struct MetadataRenderer.TokenFeatures",
            "members": [
              {
                "label": "features",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetadata)15803_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "external_link",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "documents",
                "type": "t_array(t_struct(Document)15809_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e49a3ab69c6cc97b9e23e46a322520700fa146e386e4ae94791635b9db2ded5f": {
      "address": "0xacDadC94fE569C3E8c3A546Ff078c7cbf72A20b4",
      "txHash": "0xfe24e543f33bb138692973bddd8f2819e7a41c016726bf50b73b00c236faa77a",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "nexttokenId",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:62"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "452",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:63"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "453",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:64"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "454",
            "type": "t_string_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:65"
          },
          {
            "label": "metadataRenderer",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:66"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "456",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:70"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "457",
            "type": "t_bool",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:71"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "457",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:72"
          },
          {
            "label": "_tokenTraits",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:79"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:85"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "460",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:91"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "461",
            "type": "t_array(t_uint256)45_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:109"
          },
          {
            "label": "_activeTokenCount",
            "offset": 0,
            "slot": "506",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:114"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "507",
            "type": "t_contract(IFundManager)22006",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:117"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IFundManager)22006": {
            "label": "contract IFundManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2b400051cd8f7f5474ce1f9723b2701f6222a2620ede365699f613799431eaf8": {
      "address": "0x24790aA3F1c32F74813a71493b55A1F5f19EE7a9",
      "txHash": "0xa855e51e8bdefafc9e4f382ac343d754a6a689cdaba1e0dd06fef9adb24e69d1",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "defaultImageURIs",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:115"
          },
          {
            "label": "defaultBackgroundColors",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:118"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)14759_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:121"
          },
          {
            "label": "tokenFeatures",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(TokenFeatures)14706_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:124"
          },
          {
            "label": "assetConditions",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(AssetCondition)14720_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:127"
          },
          {
            "label": "legalInfo",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(LegalInfo)14736_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:130"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(IDeedNFT)21822",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Document)14765_storage)dyn_storage": {
            "label": "struct MetadataRenderer.Document[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)21822": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetCondition)14720_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.AssetCondition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LegalInfo)14736_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.LegalInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenFeatures)14706_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenFeatures)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)14759_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetCondition)14720_storage": {
            "label": "struct MetadataRenderer.AssetCondition",
            "members": [
              {
                "label": "generalCondition",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastInspectionDate",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "knownIssues",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "improvements",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "additionalNotes",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Document)14765_storage": {
            "label": "struct MetadataRenderer.Document",
            "members": [
              {
                "label": "docType",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "documentURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LegalInfo)14736_storage": {
            "label": "struct MetadataRenderer.LegalInfo",
            "members": [
              {
                "label": "jurisdiction",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "registrationNumber",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "registrationDate",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "documents",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "restrictions",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "additionalInfo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenFeatures)14706_storage": {
            "label": "struct MetadataRenderer.TokenFeatures",
            "members": [
              {
                "label": "features",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetadata)14759_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "external_link",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "documents",
                "type": "t_array(t_struct(Document)14765_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7730d7e43ef0119f2019711aad28ffe4d62896d893a218345005bc95baf8a4ee": {
      "address": "0xf70c8Fea4B8D5cAdF35b30Fa45C4BB2744373980",
      "txHash": "0x02adf64c2cfe4c3a3d3c1277ff7048efee6b8addcc674a51a2e180323c6189e4",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IDeedNFT)4893",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:61"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:65"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:69"
          },
          {
            "label": "_unitTraits",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:109"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:115"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:121"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:125"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "358",
            "type": "t_bool",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:126"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "358",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:127"
          },
          {
            "label": "subdivisions",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(SubdivisionInfo)8440_storage)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:133"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:222"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)4893": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SubdivisionInfo)8440_storage)": {
            "label": "mapping(uint256 => struct Subdivide.SubdivisionInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SubdivisionInfo)8440_storage": {
            "label": "struct Subdivide.SubdivisionInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "collectionUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "activeUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "burnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "collectionAdmin",
                "type": "t_address",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "subdivisionValidator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unitMetadata",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9a17a5fb0560d1892e152cd32d6bb8790af4806ed7e6fae7c1777615295bb981": {
      "address": "0xfD35919370A65ed9E0c8F8514339299B98c7232b",
      "txHash": "0xd2974b11927f668a3b1290acd82e919312d35c08236748e4e4352b95fad75c74",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "fractionTokenImplementation",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "FractionTokenFactory",
            "src": "contracts/core/factories/FractionTokenFactory.sol:31"
          },
          {
            "label": "fractionalizeContract",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "FractionTokenFactory",
            "src": "contracts/core/factories/FractionTokenFactory.sol:34"
          },
          {
            "label": "createdTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "FractionTokenFactory",
            "src": "contracts/core/factories/FractionTokenFactory.sol:37"
          },
          {
            "label": "isCreatedToken",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "FractionTokenFactory",
            "src": "contracts/core/factories/FractionTokenFactory.sol:38"
          },
          {
            "label": "fractionIdToToken",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "FractionTokenFactory",
            "src": "contracts/core/factories/FractionTokenFactory.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "47777b2e758d9d311d3520c55a9be03ef5e7a70cfe120239ff6c3a5b0bfbcf9f": {
      "address": "0xa0FaF28f989D2964B2f8588c9D7Cd94a3D019C8D",
      "txHash": "0x664d9621827cba68124367689e5e0d5dfe2ca2ffe5a681392cb1fbd5dc406076",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IDeedNFT)5303",
            "contract": "Fractionalize",
            "src": "contracts/extensions/Fractionalize.sol:50"
          },
          {
            "label": "subdivideNFT",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(ISubdivide)6017",
            "contract": "Fractionalize",
            "src": "contracts/extensions/Fractionalize.sol:53"
          },
          {
            "label": "fractions",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_struct(FractionInfo)6104_storage)",
            "contract": "Fractionalize",
            "src": "contracts/extensions/Fractionalize.sol:98"
          },
          {
            "label": "nextFractionId",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "Fractionalize",
            "src": "contracts/extensions/Fractionalize.sol:101"
          },
          {
            "label": "fractionTokenFactory",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "Fractionalize",
            "src": "contracts/extensions/Fractionalize.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)5303": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_contract(ISubdivide)6017": {
            "label": "contract ISubdivide",
            "numberOfBytes": "20"
          },
          "t_enum(FractionAssetType)5350": {
            "label": "enum IFractionalize.FractionAssetType",
            "members": [
              "DeedNFT",
              "SubdivisionNFT"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(FractionInfo)6104_storage)": {
            "label": "mapping(uint256 => struct Fractionalize.FractionInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FractionInfo)6104_storage": {
            "label": "struct Fractionalize.FractionInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "collectionUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "activeShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxSharesPerWallet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "requiredApprovalPercentage",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "burnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "8"
              },
              {
                "label": "assetType",
                "type": "t_enum(FractionAssetType)5350",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "collectionAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "transferApprovals",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "adminApprovals",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ad921ace8cd3d4b9711c6ef7bd39b65785e458463dcfec6480778302e1691371": {
      "address": "0x062AdC19eC52d9f4c06D09445762B3B385D3Ba53",
      "txHash": "0xf7cbdd38a862609d052a4ab4dd07bfad1c297e0097d770c7f2c32798e600c9a4",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:79"
          },
          {
            "label": "defaultOperatingAgreementUri",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:82"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IDeedNFT)23354",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:86"
          },
          {
            "label": "supportedAssetTypes",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:90"
          },
          {
            "label": "operatingAgreements",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:94"
          },
          {
            "label": "validationCriteria",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(ValidationCriteria)19274_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:104"
          },
          {
            "label": "compatibleDeedNFTs",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:107"
          },
          {
            "label": "primaryDeedNFT",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:110"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:114"
          },
          {
            "label": "serviceFee",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:118"
          },
          {
            "label": "serviceFeesBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:121"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "362",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:124"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "363",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:129"
          },
          {
            "label": "royaltyFeePercentage",
            "offset": 0,
            "slot": "411",
            "type": "t_uint96",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:134"
          },
          {
            "label": "royaltyReceiver",
            "offset": 12,
            "slot": "411",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:137"
          },
          {
            "label": "registeredAgreements",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:142"
          },
          {
            "label": "registeredAgreementURIs",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:145"
          },
          {
            "label": "royaltyBalances",
            "offset": 0,
            "slot": "414",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:148"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)23354": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValidationCriteria)19274_storage)": {
            "label": "mapping(uint256 => struct Validator.ValidationCriteria)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidationCriteria)19274_storage": {
            "label": "struct Validator.ValidationCriteria",
            "members": [
              {
                "label": "requiredTraits",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "additionalCriteria",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requireOperatingAgreement",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requireDefinition",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "2182a1da341aaf349c7f8672a99987bd9ee377e76c1a5eda766640f0d048ee99": {
      "address": "0x13F3C92eF26101D6547c2362CE4E81d4AA6D1AA5",
      "txHash": "0xcc8057b06e87a0d0db1c0d0b93889c9723f193b60c582912ba16c0620581df1b",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IDeedNFT)13270",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:61"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:65"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:69"
          },
          {
            "label": "_unitTraits",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:109"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:115"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:121"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:125"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "358",
            "type": "t_bool",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:126"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "358",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:127"
          },
          {
            "label": "subdivisions",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(SubdivisionInfo)14540_storage)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:133"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:222"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)13270": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SubdivisionInfo)14540_storage)": {
            "label": "mapping(uint256 => struct Subdivide.SubdivisionInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SubdivisionInfo)14540_storage": {
            "label": "struct Subdivide.SubdivisionInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "collectionUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "activeUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "burnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "collectionAdmin",
                "type": "t_address",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "subdivisionValidator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unitMetadata",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "136424ec1d266316a178fdd5ecc9f6927a5a5212c402e7ba1486f8a900f9faba": {
      "address": "0x0CD9C15727f745616C0724C6FC527fFCb8957A13",
      "txHash": "0x8eb17986d20b789cab84f21e12319b7e0814c978c355513dccfaea249bcd62ee",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IDeedNFT)4893",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:68"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "352",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:72"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:76"
          },
          {
            "label": "_unitTraits",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:116"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:122"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:128"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:132"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "358",
            "type": "t_bool",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:133"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "358",
            "type": "t_address",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:134"
          },
          {
            "label": "subdivisions",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_struct(SubdivisionInfo)5728_storage)",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Subdivide",
            "src": "contracts/extensions/Subdivide.sol:229"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)4893": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SubdivisionInfo)5728_storage)": {
            "label": "mapping(uint256 => struct Subdivide.SubdivisionInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SubdivisionInfo)5728_storage": {
            "label": "struct Subdivide.SubdivisionInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "collectionUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "activeUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "burnable",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "collectionAdmin",
                "type": "t_address",
                "offset": 2,
                "slot": "6"
              },
              {
                "label": "subdivisionValidator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unitMetadata",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
