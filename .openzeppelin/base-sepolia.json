{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2F6cc7C4A9915b171ffB0a12cB394ceFA6fF26a7",
      "txHash": "0x7dcff7ced42dca8673fb9d83a78047c5abfbbd479f652f5054d9c528b388fee3",
      "kind": "uups"
    },
    {
      "address": "0xEB180A29c34B6E9c264E474fF76e0ad0A2e0AbBF",
      "txHash": "0x970a30a702e40c071d3489d1292a1df1e8f3fc326e0575b27e9078560b5c5001",
      "kind": "uups"
    },
    {
      "address": "0x0276B188f663A924E842789eCF8f9866c3dd4289",
      "txHash": "0x3ebe06d0fcbd21669d017c8be6b9b190215b53e8a16ef29b5b16e4e9c6ff2036",
      "kind": "uups"
    },
    {
      "address": "0x1444b0bB6A21AA2D7F669099b933262902Ef8429",
      "txHash": "0xf9035055ec15132f7ef3ad02c02588f506ae0898ac48b0faaaeaa196bf2b55d2",
      "kind": "uups"
    },
    {
      "address": "0xba4f0eB4350cf946ae25a4dC86cF80F596027E04",
      "txHash": "0x6fdb846993c087140f29bb2cafaf75f0c273271e5ab2ac1f47db18d847b26780",
      "kind": "uups"
    }
  ],
  "impls": {
    "8faf3dbb259a6c5b395d2c7748828c36c704d86be6b4d236f89771b5bbad3080": {
      "address": "0x709945c7E742C69bF2AFDe35aD5EbdC5493D1DA9",
      "txHash": "0x7fabff04488ce53e85b1030999a270f1548418d2e1e06d8fae358b5e73efec61",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_struct(ValidatorInfo)19170_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:63"
          },
          {
            "label": "assetTypeValidators",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/core/ValidatorRegistry.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ValidatorInfo)19170_storage)": {
            "label": "mapping(address => struct ValidatorRegistry.ValidatorInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValidatorInfo)19170_storage": {
            "label": "struct ValidatorRegistry.ValidatorInfo",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "supportedAssetTypes",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5cc4339820741891d7f8901a189c0c789f0ce8ddbbb191ee7ee7c25cca6eba64": {
      "address": "0x3f047d3234160ca03445A6c74FF5e69c5A7E98f7",
      "txHash": "0x0bfaa0de03be508b042a893540166ee1c46f6d85f8b8ea857d85c2463afdf1bd",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:32"
          },
          {
            "label": "assetTypeImageURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:35"
          },
          {
            "label": "invalidatedImageURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:38"
          },
          {
            "label": "tokenMetadata",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(TokenMetadata)13921_storage)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:60"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IDeedNFT)19984",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:70"
          },
          {
            "label": "compatibleDeedContracts",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:76"
          },
          {
            "label": "deedContractsList",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetadataRenderer",
            "src": "contracts/core/MetadataRenderer.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)19984": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetadata)13921_storage)": {
            "label": "mapping(uint256 => struct MetadataRenderer.TokenMetadata)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenMetadata)13921_storage": {
            "label": "struct MetadataRenderer.TokenMetadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "background_color",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "animation_url",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "galleryImages",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "documentTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "customMetadata",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e2acf45d7a9c97c8dfd683a6ec9ec718ef821439294f35f80ee0983922e00880": {
      "address": "0xdBc4B487fa3D51c50654ce513B55361dD96aE3Fe",
      "txHash": "0x24903494c917e9ef18c17cc0f005823f5b97df052bc0bd070dbaffa4f1ef3b2b",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "baseUri",
            "offset": 0,
            "slot": "301",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:73"
          },
          {
            "label": "defaultOperatingAgreementUri",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:76"
          },
          {
            "label": "deedNFT",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IDeedNFT)19984",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:80"
          },
          {
            "label": "supportedAssetTypes",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:84"
          },
          {
            "label": "operatingAgreements",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:88"
          },
          {
            "label": "deedMetadata",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:92"
          },
          {
            "label": "validationCriteria",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:97"
          },
          {
            "label": "compatibleDeedNFTs",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:100"
          },
          {
            "label": "primaryDeedNFT",
            "offset": 0,
            "slot": "309",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:103"
          },
          {
            "label": "isWhitelisted",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:107"
          },
          {
            "label": "serviceFee",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:111"
          },
          {
            "label": "serviceFeesBalance",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:114"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "314",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:122"
          },
          {
            "label": "royaltyFeePercentage",
            "offset": 0,
            "slot": "362",
            "type": "t_uint96",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:127"
          },
          {
            "label": "royaltyReceiver",
            "offset": 12,
            "slot": "362",
            "type": "t_address",
            "contract": "Validator",
            "src": "contracts/core/Validator.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDeedNFT)19984": {
            "label": "contract IDeedNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "7bf5a459ea66a1b2e25233a8451a22cb0398751e198fb579e6326b73b23fe01b": {
      "address": "0x6a8521368571e4244BA43BfB2c742a2b314Dd3F8",
      "txHash": "0xa43c3e24b9cf57c9e06cd5bcab27930df6ddbb05e3bbe06247373e4772996e2d",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "nexttokenId",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:57"
          },
          {
            "label": "defaultValidator",
            "offset": 0,
            "slot": "402",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:58"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "403",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:59"
          },
          {
            "label": "_contractURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:60"
          },
          {
            "label": "metadataRenderer",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:61"
          },
          {
            "label": "_approvedMarketplaces",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:65"
          },
          {
            "label": "_enforceRoyalties",
            "offset": 0,
            "slot": "407",
            "type": "t_bool",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:66"
          },
          {
            "label": "_transferValidator",
            "offset": 1,
            "slot": "407",
            "type": "t_address",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:67"
          },
          {
            "label": "_tokenTraits",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:74"
          },
          {
            "label": "_traitNames",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:80"
          },
          {
            "label": "_allTraitKeys",
            "offset": 0,
            "slot": "410",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "411",
            "type": "t_array(t_uint256)45_storage",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:107"
          },
          {
            "label": "_activeTokenCount",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:112"
          },
          {
            "label": "fundManager",
            "offset": 0,
            "slot": "457",
            "type": "t_contract(IFundManager)20189",
            "contract": "DeedNFT",
            "src": "contracts/core/DeedNFT.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IFundManager)20189": {
            "label": "contract IFundManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f4e5686d708370214bae1ae5bcaf5f28b4463fc7c48bb94f7380bafe501fd017": {
      "address": "0xaEB7217AC05Ae2e0f3883B51C6743f3Da8b5a450",
      "txHash": "0x4630787a38ec8333c932b487b438a4ae45dc72f47a1ce3c154ec857a3c407e4b",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "deedNFTContract",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:44"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:45"
          },
          {
            "label": "_commissionPercentage",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:46"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:47"
          },
          {
            "label": "validatorBalances",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "FundManager",
            "src": "contracts/core/FundManager.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
