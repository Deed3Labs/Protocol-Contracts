/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ERC1155Upgradeable,
  ERC1155UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610bec908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461088457806301ffc9a7146108165780630e89341c1461070b5780632eb2c2d6146104a25780634e1273f41461035a578063a22cb465146102cd578063e985e9c5146102725763f242432a1461007357600080fd5b346102005760a03660031901126102005761008c6108b3565b6100946108c9565b60443590606435906084356001600160401b038111610200576100bb9036906004016109cb565b936001600160a01b031692338414801561024f575b15610200576001600160a01b038216918215610200576100ef82610b8b565b506100f984610b8b565b508160005260656020526040600020856000526020526040600020548481106102005760008381526065602090815260408083208984529091528082209287900390925584815220805461014e908690610ab4565b905582856040518481528660208201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6260403392a43b61018b57005b60006020946101cd6040519788968795869463f23a6e6160e01b865233600487015260248601526044850152606484015260a0608484015260a48301906108df565b03925af16000918161021e575b50610205576101e7610af7565b6308c379a0146101f657600080fd5b6101fe610b15565b505b600080fd5b6001600160e01b031916630dc5919f60e01b0161020057005b61024191925060203d602011610248575b6102398183610920565b810190610ad7565b90386101da565b503d61022f565b50600084815260666020908152604080832033845290915290205460ff166100d0565b346102005760403660031901126102005761028b6108b3565b6102936108c9565b9060018060a01b0316600052606660205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b34610200576040366003190112610200576102e66108b3565b60243590811515809203610200576001600160a01b03169033821461020057336000526066602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b34610200576040366003190112610200576004356001600160401b038111610200573660238201121561020057806004013561039581610957565b916103a36040519384610920565b8183526024602084019260051b8201019036821161020057602401915b81831061048257836024356001600160401b038111610200576103e790369060040161096e565b9080519180518303610200576103fc83610957565b9261040a6040519485610920565b808452610419601f1991610957565b0136602085013760005b8251811015610468576001906104576001600160a01b036104448387610a8a565b51166104508386610a8a565b5190610a55565b6104618287610a8a565b5201610423565b6040516020808252819061047e90820187610a21565b0390f35b82356001600160a01b0381168103610200578152602092830192016103c0565b346102005760a0366003190112610200576104bb6108b3565b6104c36108c9565b6044356001600160401b038111610200576104e290369060040161096e565b6064356001600160401b0381116102005761050190369060040161096e565b926084356001600160401b038111610200576105219036906004016109cb565b6001600160a01b039091169133831480156106e8575b15610200578051855103610200576001600160a01b0384169182156102005760005b82518110156105d95761056c8184610a8a565b51906105788189610a8a565b518260005260656020526040806000206000908982526020522054928184106102005760009081526065602090815260408083208a8452909152808220948390039094558681529290922080546001936105d191610ab4565b905501610559565b50938284604051604081527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6106126040830187610a21565b9180830360208201528061062733948d610a21565b0390a43b61063157005b600061067093610694602096610682604051998a988997889663bc197c8160e01b8852336004890152602488015260a0604488015260a4870190610a21565b85810360031901606487015290610a21565b838103600319016084850152906108df565b03925af1600091816106c7575b506106ae576101e7610af7565b6001600160e01b0319166343e6837f60e01b0161020057005b6106e191925060203d602011610248576102398183610920565b90826106a1565b50600083815260666020908152604080832033845290915290205460ff16610537565b346102005760203660031901126102005760405160006067548060011c9060018116801561080c575b6020831081146107f8578285529081156107d45750600114610775575b61047e8361076181850382610920565b6040519182916020835260208301906108df565b606760009081527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae939250905b8082106107ba57509091508101602001610761610751565b9192600181602092548385880101520191019092916107a2565b60ff191660208086019190915291151560051b840190910191506107619050610751565b634e487b7160e01b84526022600452602484fd5b91607f1691610734565b346102005760203660031901126102005760043563ffffffff60e01b811680910361020057602090636cdb3d1360e11b8114908115610873575b8115610862575b506040519015158152f35b6301ffc9a760e01b14905082610857565b6303a24d0760e21b81149150610850565b346102005760403660031901126102005760206108ab6108a26108b3565b60243590610a55565b604051908152f35b600435906001600160a01b038216820361020057565b602435906001600160a01b038216820361020057565b919082519283825260005b84811061090b575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016108ea565b90601f801991011681019081106001600160401b0382111761094157604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116109415760051b60200190565b9080601f8301121561020057813561098581610957565b926109936040519485610920565b81845260208085019260051b82010192831161020057602001905b8282106109bb5750505090565b81358152602091820191016109ae565b81601f82011215610200578035906001600160401b03821161094157604051926109ff601f8401601f191660200185610920565b8284526020838301011161020057816000926020809301838601378301015290565b906020808351928381520192019060005b818110610a3f5750505090565b8251845260209384019390920191600101610a32565b906001600160a01b0382161561020057600052606560205260406000209060018060a01b031660005260205260406000205490565b8051821015610a9e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91908201809211610ac157565b634e487b7160e01b600052601160045260246000fd5b9081602091031261020057516001600160e01b0319811681036102005790565b60009060033d11610b0457565b905060046000803e60005160e01c90565b600060443d10610b7a576040513d600319016004823e8051913d60248401116001600160401b03841117610b8557828201928351916001600160401b038311610b7d573d84016003190185840160200111610b7d5750610b7a92910160200190610920565b90565b949350505050565b92915050565b604090815191610b9b8184610920565b600183526020830190601f1901368237825115610a9e57529056fea26469706673582212204ca141a84d74441ab813fea3b0493c2a921ec6e2a471c3e17cbcd9f3233a589c64736f6c634300081d0033";

type ERC1155UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC1155Upgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC1155Upgradeable__factory {
    return super.connect(runner) as ERC1155Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155UpgradeableInterface {
    return new Interface(_abi) as ERC1155UpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC1155Upgradeable {
    return new Contract(address, _abi, runner) as unknown as ERC1155Upgradeable;
  }
}
