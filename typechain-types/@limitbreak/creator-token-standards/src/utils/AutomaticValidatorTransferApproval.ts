/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../../common";

export interface AutomaticValidatorTransferApprovalInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "autoApproveTransfersFromValidator"
      | "setAutomaticApprovalOfTransfersFromValidator"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "AutomaticApprovalOfTransferValidatorSet"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "autoApproveTransfersFromValidator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAutomaticApprovalOfTransfersFromValidator",
    values: [boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "autoApproveTransfersFromValidator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAutomaticApprovalOfTransfersFromValidator",
    data: BytesLike
  ): Result;
}

export namespace AutomaticApprovalOfTransferValidatorSetEvent {
  export type InputTuple = [autoApproved: boolean];
  export type OutputTuple = [autoApproved: boolean];
  export interface OutputObject {
    autoApproved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface AutomaticValidatorTransferApproval extends BaseContract {
  connect(runner?: ContractRunner | null): AutomaticValidatorTransferApproval;
  waitForDeployment(): Promise<this>;

  interface: AutomaticValidatorTransferApprovalInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  autoApproveTransfersFromValidator: TypedContractMethod<[], [boolean], "view">;

  setAutomaticApprovalOfTransfersFromValidator: TypedContractMethod<
    [autoApprove: boolean],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "autoApproveTransfersFromValidator"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "setAutomaticApprovalOfTransfersFromValidator"
  ): TypedContractMethod<[autoApprove: boolean], [void], "nonpayable">;

  getEvent(
    key: "AutomaticApprovalOfTransferValidatorSet"
  ): TypedContractEvent<
    AutomaticApprovalOfTransferValidatorSetEvent.InputTuple,
    AutomaticApprovalOfTransferValidatorSetEvent.OutputTuple,
    AutomaticApprovalOfTransferValidatorSetEvent.OutputObject
  >;

  filters: {
    "AutomaticApprovalOfTransferValidatorSet(bool)": TypedContractEvent<
      AutomaticApprovalOfTransferValidatorSetEvent.InputTuple,
      AutomaticApprovalOfTransferValidatorSetEvent.OutputTuple,
      AutomaticApprovalOfTransferValidatorSetEvent.OutputObject
    >;
    AutomaticApprovalOfTransferValidatorSet: TypedContractEvent<
      AutomaticApprovalOfTransferValidatorSetEvent.InputTuple,
      AutomaticApprovalOfTransferValidatorSetEvent.OutputTuple,
      AutomaticApprovalOfTransferValidatorSetEvent.OutputObject
    >;
  };
}
